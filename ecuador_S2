/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var extent = ee.FeatureCollection("users/luiscartor/ecuadorextent");
/***** End of imports. If edited, may not auto-convert in the playground. *****/



// 0. FUNCTIONS
////////////////////////////////////////
// Cloud masking algorithm for Sentinel2


// Function to mask clouds using the Sentinel-2 QA band.
function maskS2clouds(image) {
  var qa = image.select('QA60');
  // Bits 10 and 11 are clouds and cirrus, respectively.
  var cloudBitMask = Math.pow(2, 10);
  var cirrusBitMask = Math.pow(2, 11);
  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0).and(
             qa.bitwiseAnd(cirrusBitMask).eq(0));
  // Return the masked and scaled data.
  return image.updateMask(mask);
}


// 1. LOAD COLLECTION

// Load S2 1-C input imagery.
var S2_spr = ee.ImageCollection('COPERNICUS/S2')
  // Filter to get only one year of images.
  .filterDate('2019-12-01', '2020-05-31')
  // Sentinel cloud mask is less selective than Landsat, so some people pre filter by relatively cloud free images
  //.filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))
  // Filter to get only images under the region of interest.
  .filterBounds(extent)
  //CLOUD METHOD
  .map(maskS2clouds)
  .select(['B2', 'B3','B4', 'B5', 'B6','B7','B8','B11','B12']);
  
var S2_win = ee.ImageCollection('COPERNICUS/S2')
  .filterDate('2019-06-01', '2019-11-30')
  .filterBounds(extent)
  .map(maskS2clouds)
  .select(['B2', 'B3','B4', 'B5', 'B6','B7','B8','B11','B12']);
  
var S2_year = ee.ImageCollection('COPERNICUS/S2')
  .filterDate('2019-06-01', '2020-05-31')
  .filterBounds(extent)
  .map(maskS2clouds)
  .select(['B2', 'B3','B4', 'B5', 'B6','B7','B8','B11','B12']);
  

// For the case of extracting the S2 data into 10m, we need resample in bilinear:
var S2_spr_median = S2_spr.median()//.clip(landsat.geometry());//.reproject('EPSG:4326',null,30);
//S2_spr_median = S2_spr_median.resample('bilinear');
var S2_win_median = S2_win.median();
var S2_year_median = S2_year.median();


print(S2_spr_median);


// 2. CREATE COMPOSITE
var S2dataset = S2_spr_median.addBands(S2_win_median).addBands(S2_year);


// 3. VISUALIZE AND EXPORT
Map.addLayer(S2_spr_median.clip(extent.geometry()), {bands: ['B4', 'B3', 'B2'],min:0,max:3000}, 'S2_spring');
Map.addLayer(extent,'extent');

//Export.image.toDrive({
//  image: dataset.clip(S2_spr.geometry()).int16(),
//  //region: S2_spr.geometry().bounds(),
//  description: 'p29',
//  scale: 30,
//  crs : 'EPSG:27700',
//  // Dimensions for 30m scale
//  dimensions:"399960x5690220",
//  // Max pixels for 30m scale
//  maxPixels: 399960*5690220
// 
//});





Map.centerObject(extent, 8);

